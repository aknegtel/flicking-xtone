{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/es00400142/test-projects/flicking-reproducible-pagination/helpers/SmoothScroll.context.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { createContext, useEffect, useState } from \"react\";\nexport const SmoothScrollContext = /*#__PURE__*/createContext({\n  scroll: null\n});\nexport const SmoothScrollProvider = ({\n  children,\n  options\n}) => {\n  const {\n    0: scroll,\n    1: setScroll\n  } = useState(null);\n  useEffect(() => {\n    if (!scroll) {\n      (async () => {\n        try {\n          const LocomotiveScroll = (await import(\"locomotive-scroll\")).default;\n          setTimeout(() => {\n            var _document$querySelect;\n\n            return setScroll(new LocomotiveScroll(_objectSpread({\n              el: (_document$querySelect = document.querySelector(\"[data-scroll-container]\")) !== null && _document$querySelect !== void 0 ? _document$querySelect : undefined\n            }, options)));\n          }, 750);\n        } catch (error) {\n          throw Error(`[SmoothScrollProvider]: ${error}`);\n        }\n      })();\n    }\n\n    document.addEventListener(\"DOMContentLoaded\", function (event) {\n      scroll && scroll.init();\n    });\n    document.addEventListener(\"load\", function (event) {\n      scroll && scroll.update();\n    });\n    return () => {\n      scroll && scroll.destroy();\n    };\n  }, [scroll]);\n  return /*#__PURE__*/_jsxDEV(SmoothScrollContext.Provider, {\n    value: {\n      scroll\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\nSmoothScrollContext.displayName = \"SmoothScrollContext\";\nSmoothScrollProvider.displayName = \"SmoothScrollProvider\";","map":{"version":3,"sources":["/Users/es00400142/test-projects/flicking-reproducible-pagination/helpers/SmoothScroll.context.js"],"names":["React","createContext","useEffect","useState","SmoothScrollContext","scroll","SmoothScrollProvider","children","options","setScroll","LocomotiveScroll","default","setTimeout","el","document","querySelector","undefined","error","Error","addEventListener","event","init","update","destroy","displayName"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,EAA0CC,QAA1C,QAA0D,OAA1D;AAEA,OAAO,MAAMC,mBAAmB,gBAAGH,aAAa,CAAC;AAC/CI,EAAAA,MAAM,EAAE;AADuC,CAAD,CAAzC;AAIP,OAAO,MAAMC,oBAAoB,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA2B;AAC7D,QAAM;AAAA,OAACH,MAAD;AAAA,OAASI;AAAT,MAAsBN,QAAQ,CAAC,IAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACG,MAAL,EAAa;AACX,OAAC,YAAY;AACX,YAAI;AACF,gBAAMK,gBAAgB,GAAG,CAAC,MAAM,OAAO,mBAAP,CAAP,EAAoCC,OAA7D;AACAC,UAAAA,UAAU,CACR;AAAA;;AAAA,mBACEH,SAAS,CACP,IAAIC,gBAAJ;AACEG,cAAAA,EAAE,2BACAC,QAAQ,CAACC,aAAT,CAAuB,yBAAvB,CADA,yEAEAC;AAHJ,eAIKR,OAJL,EADO,CADX;AAAA,WADQ,EAUR,GAVQ,CAAV;AAYD,SAdD,CAcE,OAAOS,KAAP,EAAc;AACd,gBAAMC,KAAK,CAAE,2BAA0BD,KAAM,EAAlC,CAAX;AACD;AACF,OAlBD;AAmBD;;AAEDH,IAAAA,QAAQ,CAACK,gBAAT,CAA0B,kBAA1B,EAA8C,UAAUC,KAAV,EAAiB;AAC7Df,MAAAA,MAAM,IAAIA,MAAM,CAACgB,IAAP,EAAV;AACD,KAFD;AAIAP,IAAAA,QAAQ,CAACK,gBAAT,CAA0B,MAA1B,EAAkC,UAAUC,KAAV,EAAiB;AACjDf,MAAAA,MAAM,IAAIA,MAAM,CAACiB,MAAP,EAAV;AACD,KAFD;AAIA,WAAO,MAAM;AACXjB,MAAAA,MAAM,IAAIA,MAAM,CAACkB,OAAP,EAAV;AACD,KAFD;AAGD,GAlCQ,EAkCN,CAAClB,MAAD,CAlCM,CAAT;AAoCA,sBACE,QAAC,mBAAD,CAAqB,QAArB;AAA8B,IAAA,KAAK,EAAE;AAAEA,MAAAA;AAAF,KAArC;AAAA,cACGE;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA5CM;AA8CPH,mBAAmB,CAACoB,WAApB,GAAkC,qBAAlC;AACAlB,oBAAoB,CAACkB,WAArB,GAAmC,sBAAnC","sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\n\nexport const SmoothScrollContext = createContext({\n  scroll: null,\n});\n\nexport const SmoothScrollProvider = ({ children, options }) => {\n  const [scroll, setScroll] = useState(null);\n\n  useEffect(() => {\n    if (!scroll) {\n      (async () => {\n        try {\n          const LocomotiveScroll = (await import(\"locomotive-scroll\")).default;\n          setTimeout(\n            () =>\n              setScroll(\n                new LocomotiveScroll({\n                  el:\n                    document.querySelector(\"[data-scroll-container]\") ??\n                    undefined,\n                  ...options,\n                })\n              ),\n            750\n          );\n        } catch (error) {\n          throw Error(`[SmoothScrollProvider]: ${error}`);\n        }\n      })();\n    }\n\n    document.addEventListener(\"DOMContentLoaded\", function (event) {\n      scroll && scroll.init();\n    });\n\n    document.addEventListener(\"load\", function (event) {\n      scroll && scroll.update();\n    });\n\n    return () => {\n      scroll && scroll.destroy();\n    };\n  }, [scroll]);\n\n  return (\n    <SmoothScrollContext.Provider value={{ scroll }}>\n      {children}\n    </SmoothScrollContext.Provider>\n  );\n};\n\nSmoothScrollContext.displayName = \"SmoothScrollContext\";\nSmoothScrollProvider.displayName = \"SmoothScrollProvider\";\n"]},"metadata":{},"sourceType":"module"}