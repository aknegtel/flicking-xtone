{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/es00400142/test-projects/flicking-reproducible-pagination/components/layout/navigation/Nav.js\";\nimport React, { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport NavBar from \"./NavBar\";\nimport FullScreenNav from \"./FullScreenNav\";\n\nconst Nav = () => {\n  const router = useRouter();\n  const {\n    0: lang,\n    1: changeLang\n  } = useState(router.locale);\n  const {\n    0: isMenuOpen,\n    1: toggleMenu\n  } = useState(false);\n\n  const toggleMenuState = () => {\n    toggleMenu(!isMenuOpen);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"relative h-full\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      isMenuOpen: isMenuOpen,\n      lang: lang,\n      toggleMenu: toggleMenuState,\n      changeLang: changeLang\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FullScreenNav, {\n      toggleMenu: toggleMenuState,\n      open: isMenuOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Nav;","map":{"version":3,"sources":["/Users/es00400142/test-projects/flicking-reproducible-pagination/components/layout/navigation/Nav.js"],"names":["React","useState","useRouter","NavBar","FullScreenNav","Nav","router","lang","changeLang","locale","isMenuOpen","toggleMenu","toggleMenuState"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACA,QAAM;AAAA,OAACK,IAAD;AAAA,OAAOC;AAAP,MAAqBP,QAAQ,CAACK,MAAM,CAACG,MAAR,CAAnC;AACA,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA2BV,QAAQ,CAAC,KAAD,CAAzC;;AAEA,QAAMW,eAAe,GAAG,MAAM;AAC5BD,IAAAA,UAAU,CAAC,CAACD,UAAF,CAAV;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,UAAU,EAAEA,UADd;AAEE,MAAA,IAAI,EAAEH,IAFR;AAGE,MAAA,UAAU,EAAEK,eAHd;AAIE,MAAA,UAAU,EAAEJ;AAJd;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,aAAD;AAAe,MAAA,UAAU,EAAEI,eAA3B;AAA4C,MAAA,IAAI,EAAEF;AAAlD;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CApBD;;AAsBA,eAAeL,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useRouter } from \"next/router\";\n\nimport NavBar from \"./NavBar\";\nimport FullScreenNav from \"./FullScreenNav\";\n\nconst Nav = () => {\n  const router = useRouter();\n  const [lang, changeLang] = useState(router.locale);\n  const [isMenuOpen, toggleMenu] = useState(false);\n\n  const toggleMenuState = () => {\n    toggleMenu(!isMenuOpen);\n  };\n\n  return (\n    <nav className=\"relative h-full\">\n      <NavBar\n        isMenuOpen={isMenuOpen}\n        lang={lang}\n        toggleMenu={toggleMenuState}\n        changeLang={changeLang}\n      />\n      <FullScreenNav toggleMenu={toggleMenuState} open={isMenuOpen} />\n    </nav>\n  );\n};\n\nexport default Nav;\n"]},"metadata":{},"sourceType":"module"}