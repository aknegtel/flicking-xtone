{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"/Users/es00400142/test-projects/flicking-reproducible-pagination/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"/Users/es00400142/test-projects/flicking-reproducible-pagination/helpers/CollectionFilter.context.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { createContext } from \"react\";\nvar CollectionFilterContext = /*#__PURE__*/createContext([]);\nexport var CollectionFilterProvider = function CollectionFilterProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState([]),\n      surface = _useState[0],\n      setType = _useState[1];\n\n  var _useState2 = useState([]),\n      color = _useState2[0],\n      setColor = _useState2[1];\n\n  var _useState3 = useState([]),\n      width = _useState3[0],\n      setWidth = _useState3[1];\n\n  var _useState4 = useState([]),\n      format = _useState4[0],\n      setFormat = _useState4[1];\n\n  var _useState5 = useState([]),\n      finish = _useState5[0],\n      setFinish = _useState5[1];\n\n  var _useState6 = useState([]),\n      continuity = _useState6[0],\n      setContinuity = _useState6[1];\n\n  var changeSurface = function changeSurface(type) {\n    var clearCurrent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (typeof type === \"string\") {\n      updateSurface(surfaceTypeOptions.filter(function (element) {\n        return element.value === type;\n      })[0], clearCurrent);\n    } else if (typeof type === \"object\") {\n      updateSurface(type, clearCurrent);\n    } else {\n      throw new Error(\"Surface type not recognized.\");\n    }\n  };\n\n  var updateSurface = function updateSurface(e, clearCurrent) {\n    if (clearCurrent) {\n      setType([e]);\n    } else {\n      // Copy the current state\n      var updated = _toConsumableArray(surface); // Check if element in the current state\n\n\n      var index = updated.indexOf(e); // Add or remove element\n\n      if (index === -1) updated.push(e);else {\n        updated.splice(index, 1);\n      } // Update state\n\n      setType(updated);\n    }\n  };\n\n  var changeWidth = function changeWidth(e) {\n    // Copy the current state\n    var updated = _toConsumableArray(width); // Check if element in the current state\n\n\n    var index = updated.indexOf(e); // Add or remove element\n\n    if (index === -1) updated.push(e);else {\n      updated.splice(index, 1);\n    } // Update state\n\n    setWidth(updated);\n  };\n\n  var changeColor = function changeColor(e) {\n    // Copy the current state\n    var updated = _toConsumableArray(color); // Check if element in the current state\n\n\n    var index = updated.indexOf(e); // Add or remove element\n\n    if (index === -1) updated.push(e);else {\n      updated.splice(index, 1);\n    } // Update state\n\n    setColor(updated);\n  };\n\n  var changeFormat = function changeFormat(e) {\n    // Copy the current state\n    var updated = _toConsumableArray(format); // Check if element in the current state\n\n\n    var index = updated.indexOf(e); // Add or remove element\n\n    if (index === -1) updated.push(e);else {\n      updated.splice(index, 1);\n    } // Update state\n\n    setFormat(updated);\n  };\n\n  var changeFinish = function changeFinish(e) {\n    // Copy the current state\n    var updated = _toConsumableArray(finish); // Check if element in the current state\n\n\n    var index = updated.indexOf(e); // Add or remove element\n\n    if (index === -1) updated.push(e);else {\n      updated.splice(index, 1);\n    } // Update state\n\n    setFinish(updated);\n  };\n\n  var changeContinuity = function changeContinuity(e) {\n    // Copy the current state\n    var updated = _toConsumableArray(continuity); // Check if element in the current state\n\n\n    var index = updated.indexOf(e); // Add or remove element\n\n    if (index === -1) updated.push(e);else {\n      updated.splice(index, 1);\n    } // Update state\n\n    setContinuity(updated);\n  };\n\n  var clearAllFilters = function clearAllFilters() {\n    setType([]);\n    setWidth([]);\n    setColor([]);\n    setFormat([]);\n    setFinish([]);\n    setContinuity([]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(CollectionFilterContext.Provider, {\n    value: {\n      surface: surface,\n      changeSurface: changeSurface,\n      color: color,\n      changeColor: changeColor,\n      width: width,\n      changeWidth: changeWidth,\n      format: format,\n      changeFormat: changeFormat,\n      finish: finish,\n      changeFinish: changeFinish,\n      continuity: continuity,\n      changeContinuity: changeContinuity,\n      clearAllFilters: clearAllFilters\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CollectionFilterProvider, \"MhmV041DKwHIXwQ5BT7BUfBq6Uk=\");\n\n_c = CollectionFilterProvider;\nexport var surfaceTypeOptions = [{\n  label: \"marble\",\n  value: \"marble\"\n}, {\n  label: \"stone\",\n  value: \"stone\"\n}, {\n  label: \"concrete\",\n  value: \"concrete\"\n}, {\n  label: \"wood\",\n  value: \"wood\"\n}, {\n  label: \"metal\",\n  value: \"metal\"\n}, {\n  label: \"basic\",\n  value: \"basic\"\n}];\nexport var colorOptions = [{\n  label: \"white\",\n  value: \"white\"\n}, {\n  label: \"beige\",\n  value: \"beige\"\n}, {\n  label: \"gold\",\n  value: \"gold\"\n}, {\n  label: \"red\",\n  value: \"red\"\n}, {\n  label: \"blue\",\n  value: \"blue\"\n}, {\n  label: \"green\",\n  value: \"green\"\n}, {\n  label: \"grey\",\n  value: \"grey\"\n}, {\n  label: \"brown\",\n  value: \"brown\"\n}, {\n  label: \"black\",\n  value: \"black\"\n}];\nexport var formatOptions = [{\n  label: \"154x324\",\n  value: \"154x324\"\n}, {\n  label: \"154x328\",\n  value: \"154x328\"\n}, {\n  label: \"160x320\",\n  value: \"160x320\"\n}, {\n  label: \"150x300\",\n  value: \"150x300\"\n}, {\n  label: \"120x270\",\n  value: \"120x270\"\n}, {\n  label: \"120x250\",\n  value: \"120x250\"\n}, {\n  label: \"120x120\",\n  value: \"120x120\"\n}];\nexport var finishOptions = [{\n  label: \"Polished\",\n  value: \"Polished\"\n}, {\n  label: \"Nature\",\n  value: \"Nature\"\n}, {\n  label: \"Silk\",\n  value: \"Silk\"\n}, {\n  label: \"Rock\",\n  value: \"Rock\"\n}, {\n  label: \"Deco Nature\",\n  value: \"Deco Nature\"\n}, {\n  label: \"Deco Lappato\",\n  value: \"Deco Lappato\"\n}];\nexport var surfaceWidthOptions = [{\n  label: \"6 mm\",\n  value: 6\n}, {\n  label: \"12 mm\",\n  value: 12\n}, {\n  label: \"20 mm\",\n  value: 20\n}];\nexport var continuityOptions = [{\n  label: \"continuous\",\n  value: \"continuous\"\n}, {\n  label: \"horizontal\",\n  value: \"horizontal\"\n}, {\n  label: \"infinite\",\n  value: \"infinite\"\n}];\nexport default CollectionFilterContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"CollectionFilterProvider\");","map":{"version":3,"sources":["/Users/es00400142/test-projects/flicking-reproducible-pagination/helpers/CollectionFilter.context.js"],"names":["useState","createContext","CollectionFilterContext","CollectionFilterProvider","children","surface","setType","color","setColor","width","setWidth","format","setFormat","finish","setFinish","continuity","setContinuity","changeSurface","type","clearCurrent","updateSurface","surfaceTypeOptions","filter","element","value","Error","e","updated","index","indexOf","push","splice","changeWidth","changeColor","changeFormat","changeFinish","changeContinuity","clearAllFilters","label","colorOptions","formatOptions","finishOptions","surfaceWidthOptions","continuityOptions"],"mappings":";;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,aAAT,QAA8B,OAA9B;AAEA,IAAMC,uBAAuB,gBAAGD,aAAa,CAAC,EAAD,CAA7C;AAEA,OAAO,IAAME,wBAAwB,GAAG,SAA3BA,wBAA2B,OAAkB;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBAC7BJ,QAAQ,CAAC,EAAD,CADqB;AAAA,MACjDK,OADiD;AAAA,MACxCC,OADwC;;AAAA,mBAE9BN,QAAQ,CAAC,EAAD,CAFsB;AAAA,MAEjDO,KAFiD;AAAA,MAE1CC,QAF0C;;AAAA,mBAG9BR,QAAQ,CAAC,EAAD,CAHsB;AAAA,MAGjDS,KAHiD;AAAA,MAG1CC,QAH0C;;AAAA,mBAI5BV,QAAQ,CAAC,EAAD,CAJoB;AAAA,MAIjDW,MAJiD;AAAA,MAIzCC,SAJyC;;AAAA,mBAK5BZ,QAAQ,CAAC,EAAD,CALoB;AAAA,MAKjDa,MALiD;AAAA,MAKzCC,SALyC;;AAAA,mBAMpBd,QAAQ,CAAC,EAAD,CANY;AAAA,MAMjDe,UANiD;AAAA,MAMrCC,aANqC;;AAQxD,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAAgC;AAAA,QAAzBC,YAAyB,uEAAV,KAAU;;AACpD,QAAI,OAAOD,IAAP,KAAgB,QAApB,EAA8B;AAC5BE,MAAAA,aAAa,CACXC,kBAAkB,CAACC,MAAnB,CAA0B,UAACC,OAAD;AAAA,eAAaA,OAAO,CAACC,KAAR,KAAkBN,IAA/B;AAAA,OAA1B,EAA+D,CAA/D,CADW,EAEXC,YAFW,CAAb;AAID,KALD,MAKO,IAAI,OAAOD,IAAP,KAAgB,QAApB,EAA8B;AACnCE,MAAAA,aAAa,CAACF,IAAD,EAAOC,YAAP,CAAb;AACD,KAFM,MAEA;AACL,YAAM,IAAIM,KAAJ,CAAU,8BAAV,CAAN;AACD;AACF,GAXD;;AAaA,MAAML,aAAa,GAAG,SAAhBA,aAAgB,CAACM,CAAD,EAAIP,YAAJ,EAAqB;AACzC,QAAIA,YAAJ,EAAkB;AAChBb,MAAAA,OAAO,CAAC,CAACoB,CAAD,CAAD,CAAP;AACD,KAFD,MAEO;AACL;AACA,UAAIC,OAAO,sBAAOtB,OAAP,CAAX,CAFK,CAGL;;;AACA,UAAMuB,KAAK,GAAGD,OAAO,CAACE,OAAR,CAAgBH,CAAhB,CAAd,CAJK,CAML;;AACA,UAAIE,KAAK,KAAK,CAAC,CAAf,EAAkBD,OAAO,CAACG,IAAR,CAAaJ,CAAb,EAAlB,KACK;AACHC,QAAAA,OAAO,CAACI,MAAR,CAAeH,KAAf,EAAsB,CAAtB;AACD,OAVI,CAYL;;AACAtB,MAAAA,OAAO,CAACqB,OAAD,CAAP;AACD;AACF,GAlBD;;AAoBA,MAAMK,WAAW,GAAG,SAAdA,WAAc,CAACN,CAAD,EAAO;AACzB;AACA,QAAIC,OAAO,sBAAOlB,KAAP,CAAX,CAFyB,CAGzB;;;AACA,QAAMmB,KAAK,GAAGD,OAAO,CAACE,OAAR,CAAgBH,CAAhB,CAAd,CAJyB,CAMzB;;AACA,QAAIE,KAAK,KAAK,CAAC,CAAf,EAAkBD,OAAO,CAACG,IAAR,CAAaJ,CAAb,EAAlB,KACK;AACHC,MAAAA,OAAO,CAACI,MAAR,CAAeH,KAAf,EAAsB,CAAtB;AACD,KAVwB,CAYzB;;AACAlB,IAAAA,QAAQ,CAACiB,OAAD,CAAR;AACD,GAdD;;AAgBA,MAAMM,WAAW,GAAG,SAAdA,WAAc,CAACP,CAAD,EAAO;AACzB;AACA,QAAIC,OAAO,sBAAOpB,KAAP,CAAX,CAFyB,CAGzB;;;AACA,QAAMqB,KAAK,GAAGD,OAAO,CAACE,OAAR,CAAgBH,CAAhB,CAAd,CAJyB,CAMzB;;AACA,QAAIE,KAAK,KAAK,CAAC,CAAf,EAAkBD,OAAO,CAACG,IAAR,CAAaJ,CAAb,EAAlB,KACK;AACHC,MAAAA,OAAO,CAACI,MAAR,CAAeH,KAAf,EAAsB,CAAtB;AACD,KAVwB,CAYzB;;AACApB,IAAAA,QAAQ,CAACmB,OAAD,CAAR;AACD,GAdD;;AAgBA,MAAMO,YAAY,GAAG,SAAfA,YAAe,CAACR,CAAD,EAAO;AAC1B;AACA,QAAIC,OAAO,sBAAOhB,MAAP,CAAX,CAF0B,CAG1B;;;AACA,QAAMiB,KAAK,GAAGD,OAAO,CAACE,OAAR,CAAgBH,CAAhB,CAAd,CAJ0B,CAM1B;;AACA,QAAIE,KAAK,KAAK,CAAC,CAAf,EAAkBD,OAAO,CAACG,IAAR,CAAaJ,CAAb,EAAlB,KACK;AACHC,MAAAA,OAAO,CAACI,MAAR,CAAeH,KAAf,EAAsB,CAAtB;AACD,KAVyB,CAY1B;;AACAhB,IAAAA,SAAS,CAACe,OAAD,CAAT;AACD,GAdD;;AAgBA,MAAMQ,YAAY,GAAG,SAAfA,YAAe,CAACT,CAAD,EAAO;AAC1B;AACA,QAAIC,OAAO,sBAAOd,MAAP,CAAX,CAF0B,CAG1B;;;AACA,QAAMe,KAAK,GAAGD,OAAO,CAACE,OAAR,CAAgBH,CAAhB,CAAd,CAJ0B,CAM1B;;AACA,QAAIE,KAAK,KAAK,CAAC,CAAf,EAAkBD,OAAO,CAACG,IAAR,CAAaJ,CAAb,EAAlB,KACK;AACHC,MAAAA,OAAO,CAACI,MAAR,CAAeH,KAAf,EAAsB,CAAtB;AACD,KAVyB,CAY1B;;AACAd,IAAAA,SAAS,CAACa,OAAD,CAAT;AACD,GAdD;;AAgBA,MAAMS,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACV,CAAD,EAAO;AAC9B;AACA,QAAIC,OAAO,sBAAOZ,UAAP,CAAX,CAF8B,CAG9B;;;AACA,QAAMa,KAAK,GAAGD,OAAO,CAACE,OAAR,CAAgBH,CAAhB,CAAd,CAJ8B,CAM9B;;AACA,QAAIE,KAAK,KAAK,CAAC,CAAf,EAAkBD,OAAO,CAACG,IAAR,CAAaJ,CAAb,EAAlB,KACK;AACHC,MAAAA,OAAO,CAACI,MAAR,CAAeH,KAAf,EAAsB,CAAtB;AACD,KAV6B,CAY9B;;AACAZ,IAAAA,aAAa,CAACW,OAAD,CAAb;AACD,GAdD;;AAgBA,MAAMU,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5B/B,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAI,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAF,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAI,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAE,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAE,IAAAA,aAAa,CAAC,EAAD,CAAb;AACD,GAPD;;AASA,sBACE,QAAC,uBAAD,CAAyB,QAAzB;AACE,IAAA,KAAK,EAAE;AACLX,MAAAA,OAAO,EAAPA,OADK;AAELY,MAAAA,aAAa,EAAbA,aAFK;AAGLV,MAAAA,KAAK,EAALA,KAHK;AAIL0B,MAAAA,WAAW,EAAXA,WAJK;AAKLxB,MAAAA,KAAK,EAALA,KALK;AAMLuB,MAAAA,WAAW,EAAXA,WANK;AAOLrB,MAAAA,MAAM,EAANA,MAPK;AAQLuB,MAAAA,YAAY,EAAZA,YARK;AASLrB,MAAAA,MAAM,EAANA,MATK;AAULsB,MAAAA,YAAY,EAAZA,YAVK;AAWLpB,MAAAA,UAAU,EAAVA,UAXK;AAYLqB,MAAAA,gBAAgB,EAAhBA,gBAZK;AAaLC,MAAAA,eAAe,EAAfA;AAbK,KADT;AAAA,cAiBGjC;AAjBH;AAAA;AAAA;AAAA;AAAA,WADF;AAqBD,CAvJM;;GAAMD,wB;;KAAAA,wB;AAyJb,OAAO,IAAMkB,kBAAkB,GAAG,CAChC;AAAEiB,EAAAA,KAAK,EAAE,QAAT;AAAmBd,EAAAA,KAAK,EAAE;AAA1B,CADgC,EAEhC;AAAEc,EAAAA,KAAK,EAAE,OAAT;AAAkBd,EAAAA,KAAK,EAAE;AAAzB,CAFgC,EAGhC;AAAEc,EAAAA,KAAK,EAAE,UAAT;AAAqBd,EAAAA,KAAK,EAAE;AAA5B,CAHgC,EAIhC;AAAEc,EAAAA,KAAK,EAAE,MAAT;AAAiBd,EAAAA,KAAK,EAAE;AAAxB,CAJgC,EAKhC;AAAEc,EAAAA,KAAK,EAAE,OAAT;AAAkBd,EAAAA,KAAK,EAAE;AAAzB,CALgC,EAMhC;AAAEc,EAAAA,KAAK,EAAE,OAAT;AAAkBd,EAAAA,KAAK,EAAE;AAAzB,CANgC,CAA3B;AASP,OAAO,IAAMe,YAAY,GAAG,CAC1B;AAAED,EAAAA,KAAK,EAAE,OAAT;AAAkBd,EAAAA,KAAK,EAAE;AAAzB,CAD0B,EAE1B;AAAEc,EAAAA,KAAK,EAAE,OAAT;AAAkBd,EAAAA,KAAK,EAAE;AAAzB,CAF0B,EAG1B;AAAEc,EAAAA,KAAK,EAAE,MAAT;AAAiBd,EAAAA,KAAK,EAAE;AAAxB,CAH0B,EAI1B;AAAEc,EAAAA,KAAK,EAAE,KAAT;AAAgBd,EAAAA,KAAK,EAAE;AAAvB,CAJ0B,EAK1B;AAAEc,EAAAA,KAAK,EAAE,MAAT;AAAiBd,EAAAA,KAAK,EAAE;AAAxB,CAL0B,EAM1B;AAAEc,EAAAA,KAAK,EAAE,OAAT;AAAkBd,EAAAA,KAAK,EAAE;AAAzB,CAN0B,EAO1B;AAAEc,EAAAA,KAAK,EAAE,MAAT;AAAiBd,EAAAA,KAAK,EAAE;AAAxB,CAP0B,EAQ1B;AAAEc,EAAAA,KAAK,EAAE,OAAT;AAAkBd,EAAAA,KAAK,EAAE;AAAzB,CAR0B,EAS1B;AAAEc,EAAAA,KAAK,EAAE,OAAT;AAAkBd,EAAAA,KAAK,EAAE;AAAzB,CAT0B,CAArB;AAYP,OAAO,IAAMgB,aAAa,GAAG,CAC3B;AAAEF,EAAAA,KAAK,EAAE,SAAT;AAAoBd,EAAAA,KAAK,EAAE;AAA3B,CAD2B,EAE3B;AAAEc,EAAAA,KAAK,EAAE,SAAT;AAAoBd,EAAAA,KAAK,EAAE;AAA3B,CAF2B,EAG3B;AAAEc,EAAAA,KAAK,EAAE,SAAT;AAAoBd,EAAAA,KAAK,EAAE;AAA3B,CAH2B,EAI3B;AAAEc,EAAAA,KAAK,EAAE,SAAT;AAAoBd,EAAAA,KAAK,EAAE;AAA3B,CAJ2B,EAK3B;AAAEc,EAAAA,KAAK,EAAE,SAAT;AAAoBd,EAAAA,KAAK,EAAE;AAA3B,CAL2B,EAM3B;AAAEc,EAAAA,KAAK,EAAE,SAAT;AAAoBd,EAAAA,KAAK,EAAE;AAA3B,CAN2B,EAO3B;AAAEc,EAAAA,KAAK,EAAE,SAAT;AAAoBd,EAAAA,KAAK,EAAE;AAA3B,CAP2B,CAAtB;AAUP,OAAO,IAAMiB,aAAa,GAAG,CAC3B;AAAEH,EAAAA,KAAK,EAAE,UAAT;AAAqBd,EAAAA,KAAK,EAAE;AAA5B,CAD2B,EAE3B;AAAEc,EAAAA,KAAK,EAAE,QAAT;AAAmBd,EAAAA,KAAK,EAAE;AAA1B,CAF2B,EAG3B;AAAEc,EAAAA,KAAK,EAAE,MAAT;AAAiBd,EAAAA,KAAK,EAAE;AAAxB,CAH2B,EAI3B;AAAEc,EAAAA,KAAK,EAAE,MAAT;AAAiBd,EAAAA,KAAK,EAAE;AAAxB,CAJ2B,EAK3B;AAAEc,EAAAA,KAAK,EAAE,aAAT;AAAwBd,EAAAA,KAAK,EAAE;AAA/B,CAL2B,EAM3B;AAAEc,EAAAA,KAAK,EAAE,cAAT;AAAyBd,EAAAA,KAAK,EAAE;AAAhC,CAN2B,CAAtB;AASP,OAAO,IAAMkB,mBAAmB,GAAG,CACjC;AAAEJ,EAAAA,KAAK,EAAE,MAAT;AAAiBd,EAAAA,KAAK,EAAE;AAAxB,CADiC,EAEjC;AAAEc,EAAAA,KAAK,EAAE,OAAT;AAAkBd,EAAAA,KAAK,EAAE;AAAzB,CAFiC,EAGjC;AAAEc,EAAAA,KAAK,EAAE,OAAT;AAAkBd,EAAAA,KAAK,EAAE;AAAzB,CAHiC,CAA5B;AAMP,OAAO,IAAMmB,iBAAiB,GAAG,CAC/B;AAAEL,EAAAA,KAAK,EAAE,YAAT;AAAuBd,EAAAA,KAAK,EAAE;AAA9B,CAD+B,EAE/B;AAAEc,EAAAA,KAAK,EAAE,YAAT;AAAuBd,EAAAA,KAAK,EAAE;AAA9B,CAF+B,EAG/B;AAAEc,EAAAA,KAAK,EAAE,UAAT;AAAqBd,EAAAA,KAAK,EAAE;AAA5B,CAH+B,CAA1B;AAMP,eAAetB,uBAAf","sourcesContent":["import { useState } from \"react\";\nimport { createContext } from \"react\";\n\nconst CollectionFilterContext = createContext([]);\n\nexport const CollectionFilterProvider = ({ children }) => {\n  const [surface, setType] = useState([]);\n  const [color, setColor] = useState([]);\n  const [width, setWidth] = useState([]);\n  const [format, setFormat] = useState([]);\n  const [finish, setFinish] = useState([]);\n  const [continuity, setContinuity] = useState([]);\n\n  const changeSurface = (type, clearCurrent = false) => {\n    if (typeof type === \"string\") {\n      updateSurface(\n        surfaceTypeOptions.filter((element) => element.value === type)[0],\n        clearCurrent\n      );\n    } else if (typeof type === \"object\") {\n      updateSurface(type, clearCurrent);\n    } else {\n      throw new Error(\"Surface type not recognized.\");\n    }\n  };\n\n  const updateSurface = (e, clearCurrent) => {\n    if (clearCurrent) {\n      setType([e]);\n    } else {\n      // Copy the current state\n      let updated = [...surface];\n      // Check if element in the current state\n      const index = updated.indexOf(e);\n\n      // Add or remove element\n      if (index === -1) updated.push(e);\n      else {\n        updated.splice(index, 1);\n      }\n\n      // Update state\n      setType(updated);\n    }\n  };\n\n  const changeWidth = (e) => {\n    // Copy the current state\n    let updated = [...width];\n    // Check if element in the current state\n    const index = updated.indexOf(e);\n\n    // Add or remove element\n    if (index === -1) updated.push(e);\n    else {\n      updated.splice(index, 1);\n    }\n\n    // Update state\n    setWidth(updated);\n  };\n\n  const changeColor = (e) => {\n    // Copy the current state\n    let updated = [...color];\n    // Check if element in the current state\n    const index = updated.indexOf(e);\n\n    // Add or remove element\n    if (index === -1) updated.push(e);\n    else {\n      updated.splice(index, 1);\n    }\n\n    // Update state\n    setColor(updated);\n  };\n\n  const changeFormat = (e) => {\n    // Copy the current state\n    let updated = [...format];\n    // Check if element in the current state\n    const index = updated.indexOf(e);\n\n    // Add or remove element\n    if (index === -1) updated.push(e);\n    else {\n      updated.splice(index, 1);\n    }\n\n    // Update state\n    setFormat(updated);\n  };\n\n  const changeFinish = (e) => {\n    // Copy the current state\n    let updated = [...finish];\n    // Check if element in the current state\n    const index = updated.indexOf(e);\n\n    // Add or remove element\n    if (index === -1) updated.push(e);\n    else {\n      updated.splice(index, 1);\n    }\n\n    // Update state\n    setFinish(updated);\n  };\n\n  const changeContinuity = (e) => {\n    // Copy the current state\n    let updated = [...continuity];\n    // Check if element in the current state\n    const index = updated.indexOf(e);\n\n    // Add or remove element\n    if (index === -1) updated.push(e);\n    else {\n      updated.splice(index, 1);\n    }\n\n    // Update state\n    setContinuity(updated);\n  };\n\n  const clearAllFilters = () => {\n    setType([]);\n    setWidth([]);\n    setColor([]);\n    setFormat([]);\n    setFinish([]);\n    setContinuity([]);\n  };\n\n  return (\n    <CollectionFilterContext.Provider\n      value={{\n        surface,\n        changeSurface,\n        color,\n        changeColor,\n        width,\n        changeWidth,\n        format,\n        changeFormat,\n        finish,\n        changeFinish,\n        continuity,\n        changeContinuity,\n        clearAllFilters,\n      }}\n    >\n      {children}\n    </CollectionFilterContext.Provider>\n  );\n};\n\nexport const surfaceTypeOptions = [\n  { label: \"marble\", value: \"marble\" },\n  { label: \"stone\", value: \"stone\" },\n  { label: \"concrete\", value: \"concrete\" },\n  { label: \"wood\", value: \"wood\" },\n  { label: \"metal\", value: \"metal\" },\n  { label: \"basic\", value: \"basic\" },\n];\n\nexport const colorOptions = [\n  { label: \"white\", value: \"white\" },\n  { label: \"beige\", value: \"beige\" },\n  { label: \"gold\", value: \"gold\" },\n  { label: \"red\", value: \"red\" },\n  { label: \"blue\", value: \"blue\" },\n  { label: \"green\", value: \"green\" },\n  { label: \"grey\", value: \"grey\" },\n  { label: \"brown\", value: \"brown\" },\n  { label: \"black\", value: \"black\" },\n];\n\nexport const formatOptions = [\n  { label: \"154x324\", value: \"154x324\" },\n  { label: \"154x328\", value: \"154x328\" },\n  { label: \"160x320\", value: \"160x320\" },\n  { label: \"150x300\", value: \"150x300\" },\n  { label: \"120x270\", value: \"120x270\" },\n  { label: \"120x250\", value: \"120x250\" },\n  { label: \"120x120\", value: \"120x120\" },\n];\n\nexport const finishOptions = [\n  { label: \"Polished\", value: \"Polished\" },\n  { label: \"Nature\", value: \"Nature\" },\n  { label: \"Silk\", value: \"Silk\" },\n  { label: \"Rock\", value: \"Rock\" },\n  { label: \"Deco Nature\", value: \"Deco Nature\" },\n  { label: \"Deco Lappato\", value: \"Deco Lappato\" },\n];\n\nexport const surfaceWidthOptions = [\n  { label: \"6 mm\", value: 6 },\n  { label: \"12 mm\", value: 12 },\n  { label: \"20 mm\", value: 20 },\n];\n\nexport const continuityOptions = [\n  { label: \"continuous\", value: \"continuous\" },\n  { label: \"horizontal\", value: \"horizontal\" },\n  { label: \"infinite\", value: \"infinite\" },\n];\n\nexport default CollectionFilterContext;\n"]},"metadata":{},"sourceType":"module"}